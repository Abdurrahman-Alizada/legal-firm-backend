import { ActionType, HttpMethod, PermissionCode, RoleName } from "src/types";

export const PERMISSION_SEED = [
  // ==== Cases ====
  {
    name: "Create Case",
    code: PermissionCode.CASE_CREATE,
    resource: "cases",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/cases",
    description: "Create a new case",
  },
  {
    name: "Read Cases",
    code: PermissionCode.CASE_READ,
    resource: "cases",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/cases",
    description: "Read or list cases",
  },
  {
    name: "Update Case",
    code: PermissionCode.CASE_UPDATE,
    resource: "cases",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/cases/:id",
    description: "Update a case",
  },
  {
    name: "Delete Case",
    code: PermissionCode.CASE_DELETE,
    resource: "cases",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/cases/:id",
    description: "Delete a case",
  },

  // ==== Documents ====
  {
    name: "Upload Document",
    code: PermissionCode.DOCUMENT_CREATE,
    resource: "documents",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/documents",
    description: "Upload a new document",
  },
  {
    name: "Read Documents",
    code: PermissionCode.DOCUMENT_READ,
    resource: "documents",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/documents",
    description: "View uploaded documents",
  },
  {
    name: "Update Document",
    code: PermissionCode.DOCUMENT_UPDATE,
    resource: "documents",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/documents/:id",
    description: "Update a document",
  },
  {
    name: "Delete Document",
    code: PermissionCode.DOCUMENT_DELETE,
    resource: "documents",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/documents/:id",
    description: "Delete a document",
  },

  // ==== Tasks ====
  {
    name: "Assign Task",
    code: PermissionCode.TASK_CREATE,
    resource: "tasks",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/tasks",
    description: "Assign or create a task",
  },
  {
    name: "Read Tasks",
    code: PermissionCode.TASK_READ,
    resource: "tasks",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/tasks",
    description: "View tasks",
  },
  {
    name: "Update Task",
    code: PermissionCode.TASK_UPDATE,
    resource: "tasks",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/tasks/:id",
    description: "Update a task",
  },
  {
    name: "Delete Task",
    code: PermissionCode.TASK_DELETE,
    resource: "tasks",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/tasks/:id",
    description: "Delete a task",
  },

  // ==== Calendar ====
  {
    name: "Create Appointment",
    code: PermissionCode.CALENDAR_CREATE,
    resource: "calendar",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/calendar",
    description: "Add a new calendar entry",
  },
  {
    name: "View Calendar",
    code: PermissionCode.CALENDAR_READ,
    resource: "calendar",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/calendar",
    description: "View calendar appointments",
  },
  {
    name: "Update Calendar",
    code: PermissionCode.CALENDAR_UPDATE,
    resource: "calendar",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/calendar/:id",
    description: "Update a calendar entry",
  },
  {
    name: "Delete Calendar Entry",
    code: PermissionCode.CALENDAR_DELETE,
    resource: "calendar",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/calendar/:id",
    description: "Delete a calendar entry",
  },

  // ==== Notes ====
  {
    name: "Create Legal Note",
    code: PermissionCode.NOTE_CREATE,
    resource: "notes",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/notes",
    description: "Create a legal note",
  },
  {
    name: "Read Legal Notes",
    code: PermissionCode.NOTE_READ,
    resource: "notes",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/notes",
    description: "View legal notes",
  },
  {
    name: "Update Legal Note",
    code: PermissionCode.NOTE_UPDATE,
    resource: "notes",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/notes/:id",
    description: "Edit a legal note",
  },
  {
    name: "Delete Legal Note",
    code: PermissionCode.NOTE_DELETE,
    resource: "notes",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/notes/:id",
    description: "Delete a legal note",
  },

  // ==== Chat ====
  {
    name: "Create Chat",
    code: PermissionCode.NOTE_CREATE,
    resource: "chat",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/chat",
    description: "Create a Chat",
  },
  {
    name: "Read Chat",
    code: PermissionCode.NOTE_READ,
    resource: "chat",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/chat",
    description: "View Chat",
  },
  {
    name: "Update Chat",
    code: PermissionCode.NOTE_UPDATE,
    resource: "chat",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/chat/:id",
    description: "Edit a Chat",
  },
  {
    name: "Delete Chat",
    code: PermissionCode.NOTE_DELETE,
    resource: "chat",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/chat/:id",
    description: "Delete a Chat",
  },

  // ==== Billing ====
  {
    name: "Create Invoice",
    code: PermissionCode.BILLING_CREATE,
    resource: "billing",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/billing",
    description: "Create new invoice",
  },
  {
    name: "Read Invoices",
    code: PermissionCode.BILLING_READ,
    resource: "billing",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/billing",
    description: "View invoices",
  },
  {
    name: "Update Invoice",
    code: PermissionCode.BILLING_UPDATE,
    resource: "billing",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/billing/:id",
    description: "Update an invoice",
  },
  {
    name: "Delete Invoice",
    code: PermissionCode.BILLING_DELETE,
    resource: "billing",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/billing/:id",
    description: "Delete an invoice",
  },

  // ==== User Management ====
  {
    name: "Create User",
    code: PermissionCode.USER_CREATE,
    resource: "users",
    action: ActionType.CREATE,
    method: HttpMethod.POST,
    endpoint: "/api/users",
    description: "Create new user",
  },
  {
    name: "Read Users",
    code: PermissionCode.USER_READ,
    resource: "users",
    action: ActionType.READ,
    method: HttpMethod.GET,
    endpoint: "/api/users",
    description: "View users",
  },
  {
    name: "Update User",
    code: PermissionCode.USER_UPDATE,
    resource: "users",
    action: ActionType.UPDATE,
    method: HttpMethod.PATCH,
    endpoint: "/api/users/:id",
    description: "Edit a user",
  },
  {
    name: "Delete User",
    code: PermissionCode.USER_DELETE,
    resource: "users",
    action: ActionType.DELETE,
    method: HttpMethod.DELETE,
    endpoint: "/api/users/:id",
    description: "Remove a user",
  },
];

export const ROLE_SEED = [
  {
    name: RoleName.CLIENT,
    description: "Client with access to own cases and firm communication",
    isSignUpAllowed: true,
    isInviteable: false,
    permissionCodes: [
      PermissionCode.CASE_READ,
      PermissionCode.DOCUMENT_CREATE,
      PermissionCode.CALENDAR_READ,
      PermissionCode.CHAT_READ,
      PermissionCode.BILLING_READ,
    ],
  },
  {
    name: RoleName.LAWYER,
    isInviteable: false,
    description:
      "Lawyer with full access to legal case workflows and firm management",
    isSignUpAllowed: true,
    permissionCodes: [
      PermissionCode.CASE_CREATE,
      PermissionCode.CASE_READ,
      PermissionCode.CASE_UPDATE,
      PermissionCode.CASE_DELETE,

      PermissionCode.DOCUMENT_CREATE,
      PermissionCode.DOCUMENT_READ,
      PermissionCode.DOCUMENT_UPDATE,
      PermissionCode.DOCUMENT_DELETE,

      PermissionCode.TASK_CREATE,
      PermissionCode.TASK_READ,
      PermissionCode.TASK_UPDATE,
      PermissionCode.TASK_DELETE,

      PermissionCode.CALENDAR_CREATE,
      PermissionCode.CALENDAR_READ,
      PermissionCode.CALENDAR_UPDATE,
      PermissionCode.CALENDAR_DELETE,

      PermissionCode.NOTE_CREATE,
      PermissionCode.NOTE_READ,
      PermissionCode.NOTE_UPDATE,
      PermissionCode.NOTE_DELETE,

      PermissionCode.CALENDAR_READ,
      PermissionCode.BILLING_CREATE,
      PermissionCode.BILLING_READ,
      PermissionCode.BILLING_UPDATE,
      PermissionCode.BILLING_DELETE,

      PermissionCode.USER_CREATE,
      PermissionCode.USER_READ,
      PermissionCode.USER_UPDATE,
      PermissionCode.USER_DELETE,
    ],
  },
  {
    name: RoleName.PARALEGAL,
    description: "Paralegal assisting with documents, calendar, and notes",
    isSignUpAllowed: false,
    isInviteable: true,
    permissionCodes: [
      PermissionCode.CASE_READ,

      PermissionCode.DOCUMENT_CREATE,
      PermissionCode.DOCUMENT_READ,
      PermissionCode.DOCUMENT_UPDATE,

      PermissionCode.CALENDAR_CREATE,
      PermissionCode.CALENDAR_READ,
      PermissionCode.CALENDAR_UPDATE,

      PermissionCode.NOTE_CREATE,
      PermissionCode.NOTE_READ,
      PermissionCode.NOTE_UPDATE,

      PermissionCode.CHAT_READ,
      PermissionCode.BILLING_READ,
    ],
  },
  {
    name: RoleName.SECRETARY,
    description: "Secretary with calendar, document, and chat assistance",
    isInviteable: true,
    isSignUpAllowed: false,
    permissionCodes: [
      PermissionCode.CASE_READ,

      PermissionCode.DOCUMENT_CREATE,
      PermissionCode.DOCUMENT_READ,

      PermissionCode.CALENDAR_CREATE,
      PermissionCode.CALENDAR_READ,

      PermissionCode.CHAT_READ,
    ],
  },
  {
    name: RoleName.ADMIN,
    isInviteable: false,
    isSignUpAllowed: false,
    description: "System-wide super admin with all permissions",
    permissionCodes: Object.values(PermissionCode),
  },
];
